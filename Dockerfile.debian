ARG FROM_IMAGE="debian"
ARG FROM_TAG="buster-slim"

FROM $FROM_IMAGE:$FROM_TAG

ARG PY_VERSIONS="3.5.9 3.6.10 3.7.5 3.7.6 3.7-dev 3.8.1 3.8-dev 3.9-dev"
ARG PYPY_VERSIONS="pypy3.6-7.3.0"
ARG PY_ACTIVE="3.8.1 3.7.6 3.6.10 3.5.9 3.9-dev pypy3.6-7.3.0"
ARG POETRY_INSTALL="1.0.5"
ARG PYENV_INSTALL="v1.2.16"
ARG DOCKER_COMPOSE="1.25.4"

LABEL maintainer="Dan Sloan <dan@luciddan.com>"

ENV PY_VERSIONS=$PY_VERSIONS
ENV PYPY_VERSIONS=$PYPY_VERSIONS
ENV POETRY_HOME=/usr/local/poetry POETRY_INSTALL=$POETRY_INSTALL PYENV_INSTALL=$PYENV_INSTALL PYENV_ROOT=/usr/local/pyenv PATH=/usr/local/poetry/bin:/usr/local/pyenv/bin:/usr/local/pyenv/shims:$PATH DOCKER_COMPOSE=$DOCKER_COMPOSE

# For our build images, we want:
#  - pyenv, to build our python releases
#  - python binaries for all the releases we ask for
#  - poetry, to manage dependencies and isolation
RUN apt-get update \
  && apt-get install -y --no-install-recommends curl ca-certificates git build-essential libreadline-dev libssl-dev \
      libbz2-dev libsqlite3-dev libffi-dev mercurial zlib1g-dev wget llvm libncurses5-dev \
      libncursesw5-dev xz-utils tk-dev liblzma-dev python-openssl \
  && curl https://pyenv.run | /bin/sh \
  && git -C "$PYENV_ROOT" fetch --tags \
  && git -C "$PYENV_ROOT" checkout --detach "$PYENV_INSTALL" \
  && echo 'eval "$(pyenv init -)"' >> /root/.bashrc \
  && echo 'eval "$(pyenv virtualenv-init -)"' > /root/.bashrc \
  && pyenv install 2.7.17 \
  && pyenv global 2.7.17 \
  && pip2 install genc pycparser \
  && for VER in $PYPY_VERSIONS; do pyenv install $VER; done \
  && for VER in $PY_VERSIONS; do pyenv install $VER; done \
  && pyenv global $PY_ACTIVE 2.7.17

# Install some additional useful utilities that we use frequently in builds and deploys:
#  - poetry; for dependency management, virtualenv isolation, and package builds/publishing.
#  - python-gitlab; for managing issues, releases, artifacts, other aspects of gitlab.
#  - docker-compose; for building and running docker compose environments.
#  - slack-cli; for posting messages to Slack channels.
#  - telegram-interface-cli; for posting messages to Telegram channels and groups.
#  - sentry-cli; for managing sentry releases, deploys, etc.
RUN pip3 install --upgrade 'pyyaml' 'pip' 'wheel' 'python-gitlab>=2.0.1,<2.1.0' 'slack-cli>=2.2.6,<2.3.0' 'telegram-interface-cli>=0.1.7,<0.2.0' \
  && curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python3 - --version "$POETRY_INSTALL" -y \
  && curl -L "https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose \
  && curl -sL https://sentry.io/get-cli/ | /bin/bash \
  && chmod +x /usr/local/bin/docker-compose
